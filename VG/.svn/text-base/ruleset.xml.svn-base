<?xml version="1.0"?>
<ruleset name="VG">
  <description>Generic coding standard for VG</description>
  <!--
    Ideas for custom rules:

    * Make sure all @see references in the docblocs reference a corrent class
    * Make sure all public methods of a class are located in a interface
    * Make sure all methods have a visibility keyword

  -->
  <rule ref="Generic.Strings.UnnecessaryStringConcat" />
  <rule ref="Generic.PHP.NoSilencedErrors" />
  <rule ref="Generic.PHP.LowerCaseConstant" />
  <rule ref="Generic.PHP.ForbiddenFunctions" />
  <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
  <rule ref="Generic.Files.LineEndings" />
  <rule ref="Generic.ControlStructures.InlineControlStructure" />
  <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />
  <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter" />
  <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
  <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
  <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
  <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall" />
  <rule ref="Generic.CodeAnalysis.EmptyStatement" />
  <rule ref="Generic.WhiteSpace.ScopeIndent" />
  <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie" />
  <rule ref="PEAR.Commenting.InlineComment" />
  <rule ref="Generic.Files.LineEndings" />
  <rule ref="Zend.Files.ClosingTag" />
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />
  <rule ref="PSR2.Methods.MethodDeclaration" />
  <rule ref="PSR2.Classes.PropertyDeclaration" />
</ruleset>
